{"name":"grunt-preload-assets","tagline":"A Grunt plugin for generating preload assets manifest files","body":"# grunt-preload-assets\r\n\r\n> A Grunt plugin for generating preload assets manifest files.\t\r\n> Supports [PreloadJS](http://www.createjs.com/#!/PreloadJS), [PxLoader](http://thinkpixellab.com/pxloader/), JSON, JS, CSV, and unlimited support for multiple formats by using [underscore templates](http://www.2ality.com/2012/06/underscore-templates.html).\r\n> By [@gunta](https://github.com/gunta/).\r\n\r\n\r\n\r\n![image](http://gunta.github.com/grunt-preload-assets/images/grunt-preload-assets-logo.jpg)\r\n\r\n\r\n\r\n## Getting Started\r\n\r\nThis plugin requires Grunt `~0.4.0`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-preload-assets --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-preload-assets');\r\n```\r\n\r\n## Preload Assets task\r\n_Run this task with the `grunt preload_assets` command._\r\n\r\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\r\n\r\n### Options\r\n\r\n#### template\r\nType: `String`\t\r\nChoices: \t\r\n\r\n* `preloadjs`\r\n* `pxloader`\r\n* `json`\r\n* `json-idaskey`\r\n* `csv`\r\n* `custom-sample`\r\n* Or a path to a template file.\t\t\r\n\r\nDefault: `json`\r\n\r\nSelects a template for generating the assets list.\r\nThe output can be customized by creating your own [underscore template](http://www.2ality.com/2012/06/underscore-templates.html). \r\n\r\n\r\n### Detecting options\r\n\r\n####detectId\r\nType: `Boolean`\t\t\r\nDefault: `true`\r\n\r\nIncludes an **identifier** in the output. \t\r\nBy default, it **camelizes the filename and removes the extension**.\r\n\t\r\n####detectSrc\r\nType: `Boolean`\t\t\r\nDefault: `true`\r\n\r\nIncludes the file path.\r\n\t\r\n####detectType\r\nType: `Boolean`\t\t\r\nDefault: `true`\r\n\r\nAnalyzes each asset file type and includes it. \t\r\nBy default, the supported file types are `IMAGE` `SOUND` `JSON` `XML` `CSS` `JAVASCRIPT` `SVG` and `TEXT`.\r\n\t\r\n####detectBytes\t\r\nType: `Boolean`\t\t\r\nDefault: `false`\t\r\n\r\nIncludes each asset file size **in bytes**.\t\t\r\nUseful when creating realistic progress bars.\r\n\t\r\n####detectTotalBytes\t\r\nType: `Boolean`\t\t\r\nDefault: `false`\t\r\n\r\nIncludes the sum of all assets file sizes **in bytes**. \t\r\nUseful when creating realistic progress bars.\r\n\r\n####detectLastModified\t\r\nType: `Boolean`\t\t\r\nDefault: `false`\t\r\n\r\nIncludes each asset file last modified timestamp **in unixtime**. \t\r\nUseful when comparing file changes or implementing a cache system.\r\n\r\n####detectMD5\t\r\nType: `Boolean`\t\t\r\nDefault: `false`\t\r\n\r\nIncludes each asset file **md5 hash** trimmed to the first **8 chars**.\t\t\r\nUseful when creating a cache system more reliable than one based on timestamps or checking integrity. \r\n\r\n####detectBase64\t\r\nType: `Boolean`\t\t\r\nDefault: `false`\t\r\n\r\nIncludes each entire asset file encoded in a **base64 string**.\t\t\r\nUseful when the asset file sizes are small, to reduce http requests.\r\n\r\n####detectDimensions\t\r\nType: `Boolean`\t\t\r\nDefault: `false`\t\r\n\r\nFor `IMAGE` files: Includes each asset file `width` and `height` **in pixels**.\t\t\r\nUseful so one doesn't need to manually write the width/height everytime for each file.\r\n\r\n*Currently this only works on OS X (Waiting your pull request)* ðŸ˜‰\r\n\t\r\n*Note that not every template needs to add support to all these properties.*\r\n\t\r\n\r\n### Advanced Options\r\n\r\n#### key\r\nType: `String`\t\r\nDefault: `filesManifest`\r\n\r\nSpecifies a key name for the root container.\r\n\r\n####ignoreBasePath\r\nType: `String`\t\r\nDefault: `undefined`\r\n\r\nIgnores a specific base path from the specified `src`.\r\n\r\n#### processSrc\r\nType: `Function`\t\r\nParameter: `String` filename\r\n\r\nOverrides the function for processing the src filename.\r\n\r\n#### processId\r\nType: `Function`\t\r\nParameter: `String` filename\r\n\r\nOverrides the function for processing the id.\r\n\r\n#### processType\r\nType: `Function`\t\r\nParameter: `String` filename\r\n\r\nOverrides the function for processing the file type.\r\n\r\n#### processBytes\r\nType: `Function`\t\r\nParameter: `Number` bytes\r\n\r\nOverrides the function for processing the number of bytes.\r\n\r\n#### processTotalBytes\r\nType: `Function`\t\r\nParameter: `String` filename\r\n\r\nOverrides the function for processing the number of total bytes.\r\n\r\n#### processDimensions\r\nType: `Function`\t\r\nParameter: `String` filename\r\n\r\nOverrides the function for processing the dimensions of the file.\r\n\r\n#### processMD5\r\nType: `Function`\t\r\nParameter: `String` filename\r\n\r\nOverrides the function for processing the md5 hash for the file.\r\n\r\n#### processLastModified\r\nType: `Function`\t\r\nParameter: `String` filename\r\n\r\nOverrides the function for processing the last modified date.\r\n\r\n#### processBase64\r\nType: `Function`\t\r\nParameter: `String` filename\r\n\r\nOverrides the function for processing the base64 encode of the file.\r\n\r\n\r\n## Usage examples\r\n\r\n### Basic usage\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n\tpreload_assets: {\r\n\t\tmy_target: {\r\n\t\t\tfiles: {\r\n\t\t\t\t'dest/filesmanifest.js': ['src/*.png', 'src/*.jpg']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n```\r\n\r\nWill produce something like this:\r\n\r\n```json\r\n{\r\n\t\"filesManifest\": {\r\n\t\t\"files\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesGenericButton\",\r\n\t\t\t    \"src\": \"test/fixtures/genericButton.png\",\r\n\t\t\t    \"type\": \"IMAGE\"\r\n\t        },\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesGenericButtonOver\",\r\n\t\t\t    \"src\": \"test/fixtures/genericButtonOver.png\",\r\n\t\t\t    \"type\": \"IMAGE\"\r\n\t        },\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesParallaxHill1\",\r\n\t\t\t    \"src\": \"test/fixtures/parallaxHill1.png\",\r\n\t\t\t    \"type\": \"IMAGE\"\r\n\t        },\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesSky\",\r\n\t\t\t    \"src\": \"test/fixtures/sky.png\",\r\n\t\t\t    \"type\": \"IMAGE\"\r\n\t        },\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesImage2\",\r\n\t\t\t    \"src\": \"test/fixtures/image2.jpg\",\r\n\t\t\t    \"type\": \"IMAGE\"\r\n\t        }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n### PreloadJS sample\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n\tpreload_assets: {\r\n\t\tmy_target: {\r\n\t\t\toptions: {\r\n\t\t\t\tignoreBasePath: 'somebasepath/path/',\r\n\t\t\t\ttemplate: 'preloadjs'\r\n\t\t\t},\r\n\t\t\tfiles: {\r\n\t\t\t\t'dest/filesmanifest.js': ['somebasepath/path/*.png', 'somebasepath/path/*.jpg']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n```\r\n\r\nWill produce this:\r\n\r\n```js\r\nvar filesManifest = [\r\n\t{id: 'genericButton', src: 'genericButton.png', type: createjs.LoadQueue.IMAGE},\r\n\t{id: 'genericButtonOver', src: 'genericButtonOver.png', type: createjs.LoadQueue.IMAGE},\r\n\t{id: 'parallaxHill1', src: 'parallaxHill1.png', type: createjs.LoadQueue.IMAGE},\r\n\t{id: 'sky', src: 'sky.png', type: createjs.LoadQueue.IMAGE},\r\n\t{id: 'image2', src: 'image2.jpg', type: createjs.LoadQueue.IMAGE}\r\n];\r\n```\r\n\r\n### JSON full options sample\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n\tpreload_assets: {\r\n\t\tmy_target: {\r\n\t\t\toptions: {\r\n\t\t\t\ttemplate: 'json',\r\n\t\t\t\tdetectId: true,\r\n\t\t\t\tdetectBytes: true,\r\n\t\t\t\tdetectTotalBytes: true,\r\n\t\t\t\tdetectSrc: true,\r\n\t\t\t\tdetectLastModified: false,\r\n\t\t\t\tdetectMD5: true,\r\n\t\t\t\tdetectBase64: true,\r\n\t\t\t\tdetectDimensions: true\r\n\t\t\t},\r\n\t\t\tfiles: {\r\n\t\t\t\t'dest/filesmanifest.js': ['test/fixtures/*.*']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n```\r\n\r\nWill produce this:\r\n\r\n```json\r\n{\r\n\t\"filesManifest\": {\r\n\t\t\"files\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesCabinBoy\",\r\n\t\t\t    \"src\": \"test/fixtures/CabinBoy.mp3\",\r\n\t\t\t    \"bytes\": 9529,\r\n\t\t\t    \"md5\": \"bc1d817c\",\r\n                \"base64\": \"SUQzAwAAAAAlH1RSUQzAwAAAAAlH1RZRVIMjAxMC0xMC0yMlQxwNjowM...\",\r\n                \"lastModified\": 1363601857000\r\n\t        },\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesThunder\",\r\n\t\t\t    \"src\": \"test/fixtures/Thunder.ogg\",\r\n\t\t\t    \"bytes\": 71083,\r\n\t\t\t    \"md5\": \"076b3c87\",\r\n\t\t\t    \"base64\": \"1RZRVIAAAAaAASUQzAwAAAAAlH1RZRVIAAAAaAAAAMjAxMC0xMC0ywNjowM...\",\r\n                \"lastModified\": 1363601857000\r\n\t        },\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesFont\",\r\n\t\t\t    \"src\": \"test/fixtures/font.css\",\r\n\t\t\t    \"bytes\": 37,\r\n\t\t\t    \"md5\": \"34b228cf\",\r\n                \"base64\": \"ZGl2IHsKICAgY29sb3I6ICMyNMC0xmIzZjggIWltcG9ydGFudDsKfQ...\",\r\n                \"lastModified\": 1363601857000\r\n\t        },\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"testFixturesGenericButton\",\r\n\t\t\t    \"src\": \"test/fixtures/genericButton.png\",\r\n\t\t\t    \"bytes\": 2832,\r\n\t\t\t    \"width\": 150,\r\n                \"height\": 100,\r\n                \"md5\": \"7a36698a\",\r\n                \"base64\": \"iVBONvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2FTkSuQmCC...\"\r\n\t        },\r\n\t\t\t{\r\n\t\t\t\t\"...\": \"............\"\r\n\t\t\t}\r\n        ],\r\n        \"totalBytes\": 206944\r\n    }\r\n}\r\n```\r\n\r\n### CSV options sample\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n\tpreload_assets: {\r\n\t\tmy_target: {\r\n\t\t\toptions: {\r\n\t\t\t\t\ttemplate: 'csv'\r\n\t\t\t},\r\n\t\t\tfiles: {\r\n\t\t\t\t'dest/filesmanifest.csv': ['test/fixtures/*.*']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n```\r\n\r\nWill produce this:\r\n\r\n```csv\r\ntest/fixtures/CabinBoy.mp3,test/fixtures/Thunder.ogg,test/fixtures/font.css,test/fixtures/gbot.svg,test/fixtures/genericButton.png,test/fixtures/genericButtonOver.png,test/fixtures/grant.json,test/fixtures/grant.xml,test/fixtures/image2.jpg,test/fixtures/loader.gif,test/fixtures/parallaxHill1.png,test/fixtures/sky.png\r\n```\r\n\r\n\r\n\r\n## Release History\r\n\r\n### 0.2.1\r\n- Updated package information\r\n\r\n### 0.2.0\r\n- First NPM package release\r\n\r\n### 0.1.2\r\n- Changed option parameters to a single hash because they would be overridden with a new object if passed\r\n- Changed idaskey to hash for better naming\r\n- Added bytes to PreloadJS template\r\n\r\n### 0.1.1\r\n\r\n- Added timestamp support\r\n- Added base64 support\r\n- Added md5 support\r\n- Added flag for optional switching of options\r\n- Added JSON template, with key and array version\r\n- Added CSV support\r\n- Added totalBytes support\r\n- Replaced lodash with grunt.util._\r\n\r\n","google":"UA-40807861-1","note":"Don't delete this file! It's used internally to help with page regeneration."}